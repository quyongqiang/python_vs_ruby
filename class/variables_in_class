ruby类中的实例变量，@开头的，必须明确在initialize中赋值，在方法外部赋值不起作用，也不会报错。

ruby中的以下几种的赋值和调用方法严格区分,类变量 类常量 实例变量 局部变量 全局变量 赋值和调用 严格区分
      
      
   实例变量 @name
     赋值：必须明确在initialize中赋值,在类中实例方法外赋值无效
     调用：需要实现get 方法
   类常量 Version
     赋值：Version = "2.0"
     调用：Class::Version
   类变量  @@name
     赋值：@@name
     调用：需要实现get 方法

      

python中 类变量 类常量 实例变量 赋值和调用 并不能严格区分
   如果类中定义了类变量，即在类中，方法外定义的变量，不区分大小写，如果实例中没有定义该变量的同名变量，
   也可以使用实例直接读取该变量，但不能给该变量赋值，如果想赋值必须使用Class.var的方式赋值
   如果一个对象在类模版中没有某变量，也可以直接给该对象赋值，这在ruby中时不可以的，ruby中的所有.后面的方法，
   get和set操作都必须单独定义，没有定义不能操作。


